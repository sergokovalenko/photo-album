{"version":3,"sources":["components/Button/index.jsx","UserAlbumPage/Information/components/UserDescription/index.jsx","data.js","constants/index.js","helpers/responseHandler.js","UserAlbumPage/Information/components/AlbumDescription/index.jsx","UserAlbumPage/Information/components/CreateUpdateAlbumModal/index.jsx","UserAlbumPage/Information/index.jsx","UserAlbumPage/PageContent/components/Tabs/index.jsx","UserAlbumPage/PageContent/components/Comments/index.jsx","UserAlbumPage/PageContent/components/Photo/index.jsx","UserAlbumPage/PageContent/containers/Photos/index.jsx","components/Search/index.jsx","UserAlbumPage/PageContent/containers/Friends/index.jsx","UserAlbumPage/PageContent/containers/Albums/index.jsx","UserAlbumPage/PageContent/index.jsx","UserAlbumPage/index.jsx","Index/index.jsx","Signup/index.jsx","StartPoint/index.jsx","serviceWorker.js","index.js"],"names":["button","_ref","content","onClick","_ref$classes","classes","props","Object","objectWithoutProperties","react_default","a","createElement","assign","className","concat","UserDescription","item","_useState","useState","_useState2","slicedToArray","isBioShown","changeBioVisibility","firstName","lastName","bio","photoCount","nickname","photos","url","name","id","likes","albums","userId","count","access","comments","text","users","birthDate","friends","ownerId","restSettings","method","headers","Content-Type","responseHandler","response","ok","json","Error","AlbumDescription","curUserId","user","setUser","useEffect","fetch","window","host","objectSpread","then","result","catch","find","el","react_router_dom","to","CreateUpdateAlbumModal","setName","_useState3","tag","_useState4","setTag","_useState5","_useState6","photo","setPhoto","_useState7","_useState8","setAccess","tabIndex","role","aria-hidden","type","data-dismiss","aria-label","value","hidden","readOnly","htmlFor","onChange","e","target","placeholder","Information","isUser","isAdmin","Fragment","src","alt","width","Information_components_UserDescription","Information_components_AlbumDescription","components_Button","console","log","data-toggle","data-target","alert","accept","components_CreateUpdateAlbumModal","Tabs","itemId","activeTab","_ref$isUser","href","CommentsContainer","albumId","setComments","commentValue","setComment","mapped","dataComm","map","comm","react_textarea_autosize_esm_browser","maxRows","maxLength","autoFocus","body","JSON","stringify","fromId","comment","res","length","key","Photo","photoId","PhotosContainer","setPhotos","datPhoto","PageContent_components_Photo","Search","FriendsContainer","setFriends","search","setSearch","dataFriends","filter","components_Search","trim","includes","friend","height","AlbumsContainer","setAlbums","dataAlbums","album","PageContent","path","location","pathname","test","components_Tabs","react_router","exact","render","Albums","Friends","Photos","components_Comments","Content","match","params","curItem","setItem","src_UserAlbumPage_Information","UserAlbumPage_PageContent","Index","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","validatePassword","val","onPasswordChange","setState","password","isPasswordValid","validateLogin","onLoginChange","login","isLoginValid","isLogFromServer","onSignin","preventDefault","_this$state","state","resp","loginErrorMessage","loginServerMessage","passwordMessage","_this2","_this$state2","action","event","Component","Signup","MainApp","component","UserAlbumPage","Boolean","hostname","ReactDOM","StartPoint","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.83765412.chunk.js","sourcesContent":["import React from 'react';\r\nimport './index.scss';\r\n\r\nconst button = ({ content, onClick, classes = 'btn-light', ...props }) => {\r\n    return (\r\n        <button className={`btn btn-action ${classes}`} onClick={onClick} {...props}>{ content }</button>\r\n    );\r\n};\r\n\r\nexport default button;\r\n","import React, {useState} from 'react';\r\nimport './index.scss';\r\n\r\nconst UserDescription = ({ item }) => {\r\n    const [isBioShown, changeBioVisibility] = useState(false);\r\n    const {\r\n        firstName,\r\n        lastName,\r\n        bio,\r\n        // birthDate,\r\n        photoCount,\r\n        nickname\r\n    } = item;\r\n\r\n    return (\r\n        <div className=\"user-info\">\r\n            <div className=\"user-info-name\">{`${firstName} ${lastName}`}</div>\r\n            <div className=\"user-info-nick text-monospace ml-3\">{nickname}</div>\r\n            <div className=\"user-info-bio\">\r\n                <span>About: </span>\r\n                {\r\n                    isBioShown ?\r\n                        <span>{bio} </span> :\r\n                        null\r\n                }\r\n                <span className=\"user-info-bio--link\" onClick={() => changeBioVisibility(!isBioShown)}>\r\n                    {isBioShown ? 'Hide...' : 'Show...'}\r\n                </span>\r\n            </div>\r\n            <div className=\"user-info-photos\">{photoCount} photos</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserDescription;\r\n","export const photos = [\r\n    { url: 'https://im0-tub-ru.yandex.net/i?id=26de86a824ce957a2d1748be27eb358e-l&n=13', name: 'name1', id: 0, likes: 7 },\r\n    { url: 'https://im0-tub-ru.yandex.net/i?id=c1923033276d94680bf940048b53d420-l&n=13', name: 'name2', id: 2, likes: 6 },\r\n    { url: 'https://im0-tub-ru.yandex.net/i?id=2b9ee8c1720008d0370dc729e7c8ac57-l&n=13', name: 'name3', id: 3, likes: 5 },\r\n    { url: 'https://im0-tub-ru.yandex.net/i?id=f050e40a84848bf5f70f55405e7b3a7b-l&n=13', name: 'name4', id: 4, likes: 4 },\r\n    { url: 'https://im0-tub-ru.yandex.net/i?id=dbfdc7a3a246cf0cb7ad66899416e386-l&n=13', name: 'name5', id: 5, likes: 2 }\r\n];\r\n\r\nexport const albums = [\r\n    { url: 'https://im0-tub-ru.yandex.net/i?id=26de86a824ce957a2d1748be27eb358e-l&n=13', name: 'name1', id: 1, userId: 1, count: 5, access: 1, photoCount: 4 },\r\n    { url: 'https://im0-tub-ru.yandex.net/i?id=c1923033276d94680bf940048b53d420-l&n=13', name: 'name2', id: 2, userId: 1, count: 5, access: 1, photoCount: 5 },\r\n    { url: 'https://im0-tub-ru.yandex.net/i?id=2b9ee8c1720008d0370dc729e7c8ac57-l&n=13', name: 'name3', id: 3, userId: 0, count: 3, access: 0, photoCount: 3 },\r\n    { url: 'https://im0-tub-ru.yandex.net/i?id=f050e40a84848bf5f70f55405e7b3a7b-l&n=13', name: 'name4', id: 4, userId: 1, count: 4, access: 1, photoCount: 2 },\r\n    { url: 'https://im0-tub-ru.yandex.net/i?id=dbfdc7a3a246cf0cb7ad66899416e386-l&n=13', name: 'name5', id: 5, userId: 0, count: 5, access: 0, photoCount: 9 }\r\n];\r\n\r\nexport const comments = [\r\n    { text: 'name1', id: 0, userId: 1 },\r\n    { text: 'name2', id: 10, userId: 2 },\r\n    { text: 'name3', id: 24, userId: 3 },\r\n    { text: 'name4', id: 4, userId: 1 },\r\n    { text: 'name5', id: 5, userId: 2 }\r\n];\r\n\r\nexport const users = [\r\n    { firstName: 'name1', lastName: 'famaly', birthDate: '5/4/2019', id: 1, bio: 'bio', photoCount: 1, nickname: 'n1ickname', url: 'https://im0-tub-ru.yandex.net/i?id=26de86a824ce957a2d1748be27eb358e-l&n=13' },\r\n    { firstName: 'name2', lastName: 'famaly', birthDate: '5/4/2019', id: 2, bio: 'bio', photoCount: 4, nickname: 'ni1ckname', url: 'https://im0-tub-ru.yandex.net/i?id=c1923033276d94680bf940048b53d420-l&n=13' },\r\n    { firstName: 'name3', lastName: 'famaly', birthDate: '5/4/2019', id: 3, bio: 'bio', photoCount: 5, nickname: 'nic1kname', url: 'https://im0-tub-ru.yandex.net/i?id=2b9ee8c1720008d0370dc729e7c8ac57-l&n=13' },\r\n    { firstName: 'name4', lastName: 'famaly', birthDate: '5/4/2019', id: 4, bio: 'bio', photoCount: 8, nickname: 'nick1name', url: 'https://im0-tub-ru.yandex.net/i?id=f050e40a84848bf5f70f55405e7b3a7b-l&n=13' },\r\n    { firstName: 'name5', lastName: 'famaly', birthDate: '5/4/2019', id: 5, bio: 'bio', photoCount: 7, nickname: 'nickn1ame', url: 'https://im0-tub-ru.yandex.net/i?id=dbfdc7a3a246cf0cb7ad66899416e386-l&n=13' }\r\n];\r\n\r\nexport const friends = [\r\n    { ownerId: 1, firstName: 'name2', lastName: 'famaly', birthDate: '5/4/2019', id: 2, nickname: 'n1ickname', url: 'https://im0-tub-ru.yandex.net/i?id=c1923033276d94680bf940048b53d420-l&n=13' },\r\n    { ownerId: 1, firstName: 'name3', lastName: 'famaly', birthDate: '5/4/2019', id: 3, nickname: 'ni1ckname', url: 'https://im0-tub-ru.yandex.net/i?id=2b9ee8c1720008d0370dc729e7c8ac57-l&n=13' },\r\n    { ownerId: 2, firstName: 'name4', lastName: 'famaly', birthDate: '5/4/2019', id: 4, nickname: 'nic1kname', url: 'https://im0-tub-ru.yandex.net/i?id=f050e40a84848bf5f70f55405e7b3a7b-l&n=13' },\r\n    { ownerId: 1, firstName: 'name5', lastName: 'famaly', birthDate: '5/4/2019', id: 5, nickname: 'nick1name', url: 'https://im0-tub-ru.yandex.net/i?id=dbfdc7a3a246cf0cb7ad66899416e386-l&n=13' },\r\n    { ownerId: 2, firstName: 'name3', lastName: 'famaly', birthDate: '5/4/2019', id: 3, nickname: 'nickn1ame', url: 'https://im0-tub-ru.yandex.net/i?id=2b9ee8c1720008d0370dc729e7c8ac57-l&n=13' }\r\n];\r\n","export const restSettings = {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n};\r\n","export default (response) => {\r\n    if (response.ok) {\r\n        return response.json();\r\n    }\r\n\r\n    throw Error('request error');\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './index.scss';\r\nimport { users } from './../../../../data';\r\nimport {restSettings} from \"../../../../constants\";\r\nimport responseHandler from \"../../../../helpers/responseHandler\";\r\n\r\nconst AlbumDescription = ({ item, curUserId }) => {\r\n    const {\r\n        id,\r\n        photoCount,\r\n        name,\r\n        userId,\r\n        access\r\n    } = item;\r\n    const [user, setUser] = useState(null);\r\n    useEffect(() => {\r\n        // fetching data to take user by owner Id\r\n        fetch(`${window.host}/api/user/${userId}`, {\r\n            ...restSettings,\r\n            method: 'GET'\r\n        }).then(result => responseHandler(result))\r\n            .then(user => setUser(user))\r\n            .catch(() => {\r\n                setUser(null);\r\n            });\r\n\r\n        setUser(users.find(el => el.id === userId));\r\n    }, [id, userId]);\r\n\r\n    return (\r\n        <div className=\"album-info\">\r\n            <div className=\"album-info-name\">{name}</div>\r\n            {\r\n                user ?\r\n                    <div className=\"album-info-nick text-monospace ml-3\">\r\n                        Owner:\r\n                        <Link to={`/user/${userId}`} className=\"text-primary info-user-name\">\r\n                            {\r\n                                curUserId === userId ?\r\n                                    'You' :\r\n                                    `${user.firstName} ${user.lastName}`\r\n                            }\r\n                        </Link>\r\n                    </div> :\r\n                    'User not found'\r\n            }\r\n            <div className=\"album-info-photos\">Album include {photoCount} photos</div>\r\n            <div className=\"album-info-access\">Album is visible for {access == '0' ? 'all' : access == '1' ? 'friends only' : 'me'}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AlbumDescription;\r\n","import React, { useState } from \"react\";\r\nimport {restSettings} from \"../../../../constants\";\r\nimport responseHandler from \"../../../../helpers/responseHandler\";\r\n\r\nconst CreateUpdateAlbumModal = ({ id, item }) => {\r\n    const [name, setName] = useState(item ? item.name : '');\r\n    const [tag, setTag] = useState(item ? item.tag : '');\r\n    const [photo, setPhoto] = useState('');\r\n    const [access, setAccess] = useState(item ? item.access : '0');\r\n    const onButtonClick = () => {\r\n        fetch(`${window.host}/api/album`, {\r\n            ...restSettings,\r\n            body: JSON.stringify({\r\n                name,\r\n                tag,\r\n                photo: photo.length > 0 ? photo : null,\r\n                access,\r\n                id: item ? item.id : null\r\n            })\r\n        }).then(res => responseHandler(res))\r\n            .then(() => console.log('created'))\r\n            .catch(() => console.log('error'))\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal fade\" id={id} tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog modal-dialog-centered modal-xl\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\">Modal title</h5>\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        { item ? <input type=\"text\" value={item.id} hidden readOnly /> : null }\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"photo\">Album picture</label>\r\n                            <input\r\n                                type=\"file\"\r\n                                value={photo}\r\n                                className=\"form-control-file\"\r\n                                id=\"photo\"\r\n                                onChange={(e) => setPhoto(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"name\">Name:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"name\"\r\n                                placeholder=\"Creative name for your memories\"\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"name\">Tags:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"tags\"\r\n                                placeholder=\"tag1 tag_2 tag.3\"\r\n                                value={tag}\r\n                                onChange={(e) => setTag(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"form-check\">\r\n                                <label htmlFor=\"exampleFormControlSelect1\">Visible for:</label>\r\n                                <select value={access} className=\"form-control\" id=\"access\" onChange={(e) => setAccess(e.target.value)}>\r\n                                    <option value=\"0\">All</option>\r\n                                    <option value=\"1\">Friends</option>\r\n                                    <option value=\"2\">Only me</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button className=\"btn btn-primary\" data-dismiss=\"modal\">{ item ? 'Update' : 'Create'} album</button>\r\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateUpdateAlbumModal;\r\n","import React from 'react';\r\nimport Button from '../../components/Button';\r\nimport UserDescription from './components/UserDescription';\r\nimport AlbumDescription from './components/AlbumDescription';\r\nimport './index.scss';\r\nimport CreateUpdateAlbumModal from \"./components/CreateUpdateAlbumModal\";\r\n\r\nconst Information = ({item, isUser, curUserId, isAdmin}) => {\r\n    // const isCurUserPage = isUser && curUserId === item.id;\r\n    const {url} = item;\r\n    const addFriend = () => {\r\n        // request\r\n        console.log('request data');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"wrapper\">\r\n                <div className=\"info\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6 picture\">\r\n                            <img\r\n                                className=\"w-100 img-fluid img-thumbnail rounded-circle\"\r\n                                src={url}\r\n                                alt=\"log\"\r\n                                width=\"50%\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-6 information\">\r\n                            {\r\n                                isUser ?\r\n                                    <UserDescription item={item}/> :\r\n                                    <AlbumDescription curUserId={curUserId} item={item}/>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"buttons-container\">\r\n                    { isUser && curUserId !== item.id ? <Button content=\"Add friend\" onClick={addFriend}/> : null }\r\n                    {\r\n                        isUser && curUserId === item.id ?\r\n                            <>\r\n                                <Button\r\n                                    content=\"Upload photo\"\r\n                                    data-toggle=\"modal\"\r\n                                    data-target=\"#addPhoto\"\r\n                                />\r\n                                <Button\r\n                                    content=\"Create album\"\r\n                                    data-toggle=\"modal\"\r\n                                    data-target=\"#newAlbum\"\r\n                                />\r\n                            </> :\r\n                            null\r\n                    }\r\n                    {\r\n                        !isUser && curUserId === item.userId ?\r\n                            <Button\r\n                                content=\"Change album\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#changeAlbum\"\r\n                            /> :\r\n                            null\r\n                    }\r\n                    {\r\n                        !isUser && curUserId === item.userId && isAdmin ?\r\n                            <Button\r\n                                content=\"Delete album\"\r\n                                onClick={() => alert('Delete album')}\r\n                            /> :\r\n                            null\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"modal fade\" id=\"addPhoto\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog modal-xl\">\r\n                    <div className=\"modal-content row m-3\">\r\n                        <form className=\"m-3\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"uplPhoto\">Select file</label>\r\n                                <input\r\n                                    type=\"file\"\r\n                                    className=\"form-control-file\"\r\n                                    id=\"uplPhoto\"\r\n                                    accept=\"image/*,image/jpeg,image/png\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"tags\">Tags:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"tags\"\r\n                                    placeholder=\"tag1 tag@2 tag_3\"\r\n                                    readOnly\r\n                                />\r\n                            </div>\r\n                            <button className=\"btn btn-primary\">Upload photo</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <CreateUpdateAlbumModal id=\"newAlbum\" item={null} />\r\n            <CreateUpdateAlbumModal id=\"changeAlbum\" item={item} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Information;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Tabs = ({ itemId, activeTab, isUser = true }) => (\r\n    <div className=\"tabs\">\r\n        <ul className=\"nav nav-tabs nav-justified\">\r\n\r\n            {\r\n                isUser ?\r\n                    <>\r\n                        <li className=\"nav-item\">\r\n                            <Link to={`/user/${itemId}/albums`} className={`nav-link ${activeTab === 1 ? 'active' : ''}`} href=\"#\">Albums</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to={`/user/${itemId}/friends`} className={`nav-link ${activeTab === 2 ? 'active' : ''}`} href=\"#\">Friends</Link>\r\n                        </li>\r\n                    </> :\r\n                    <>\r\n                        <li className=\"nav-item\">\r\n                            <Link\r\n                                to={`/album/${itemId}/`}\r\n                                className={`nav-link ${activeTab === 0 || !isUser ? 'active' : ''}`}\r\n                                href=\"#\"\r\n                            >\r\n                                All photos\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link\r\n                                to={`/album/${itemId}/comments`}\r\n                                className={`nav-link ${activeTab === 0 || !isUser ? 'active' : ''}`}\r\n                                href=\"#\"\r\n                            >\r\n                                Comments\r\n                            </Link>\r\n                        </li>\r\n                    </>\r\n            }\r\n        </ul>\r\n    </div>\r\n);\r\n\r\nexport default Tabs;\r\n","import React, { useState, useEffect } from 'react';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport { Link } from 'react-router-dom';\r\nimport { comments as dataComm, users } from '../../../../data';\r\nimport './index.scss';\r\nimport {restSettings} from \"../../../../constants\";\r\nimport responseHandler from \"../../../../helpers/responseHandler\";\r\n\r\nconst CommentsContainer = ({ albumId, curUserId }) => {\r\n    const [comments, setComments] = useState([]);\r\n    const [commentValue, setComment] = useState('');\r\n    const sendComment = () => {\r\n        fetch(`${window.host}/comment`, {\r\n            ...restSettings,\r\n            body: JSON.stringify({\r\n                fromId: curUserId,\r\n                comment: commentValue,\r\n                albumId: albumId\r\n            })\r\n        }).then(res => responseHandler(res))\r\n            .then(() => true)\r\n            .catch(() => {\r\n                alert('comment wasn\\'t sent')\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        // fetching data\r\n        const mapped = dataComm.map(comm => ({\r\n            ...users.find(user => user.id === comm.userId),\r\n            ...comm\r\n        }));\r\n\r\n        setComments(mapped);\r\n    }, [albumId]);\r\n\r\n    return (\r\n        <div className=\"comments mt-3 mb-5\">\r\n            <div className=\"form-row\">\r\n                <div className=\"form-group col-10\">\r\n                    <TextareaAutosize\r\n                        className=\"form-control\"\r\n                        placeholder=\"Write your comment here...\"\r\n                        value={commentValue}\r\n                        onChange={(e) => setComment(e.target.value)}\r\n                        maxRows={7}\r\n                        maxLength={255}\r\n                        autoFocus\r\n                    />\r\n                </div>\r\n                <div className=\"col\">\r\n                    <button onClick={() => sendComment()} className=\"btn btn-primary\">Comment</button>\r\n                </div>\r\n            </div>\r\n            {\r\n                comments.length > 0 ?\r\n                    comments.map(el => (\r\n                        <div key={`c:${el.id}u:${el.userId}`} className=\"comment d-flex mb-2\">\r\n                            <div className=\"comment-photo mr-3\">\r\n                                <img src={el.url} alt=\"ava\" className=\"rounded-circle w-100\" />\r\n                            </div>\r\n                            <div className=\"comment-content border-bottom border-info w-100 pb-3\">\r\n                                <Link to={`/user/${el.userId}`} className=\"d-block text-primary comment-user-name\">\r\n                                    {el.firstName} {el.lastName}\r\n                                </Link>\r\n                                <div className=\"comment-text\">{el.text}</div>\r\n                            </div>\r\n                        </div>\r\n                    )):\r\n                    'No comments'\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CommentsContainer;\r\n","import React from 'react';\r\nimport Comments from '../Comments';\r\nimport './index.scss';\r\nimport {Link} from \"react-router-dom\";\r\nimport {restSettings} from \"../../../../constants\";\r\nimport responseHandler from \"../../../../helpers/responseHandler\";\r\n\r\nconst Photo = ({ photo, user, curUserId }) => {\r\n    const { url, name } = photo;\r\n    const like = () => {\r\n        fetch(`${window.host}/like`, {\r\n            ...restSettings,\r\n            body: JSON.stringify({\r\n                userId: curUserId,\r\n                photoId: photo.id\r\n            })\r\n        }).then(res => responseHandler(res))\r\n            .then(() => true)\r\n            .catch(() => alert('like error in Photo component'));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"col-4 mt-3\">\r\n                <img\r\n                    src={url}\r\n                    alt={name}\r\n                    className=\"pointer rounded-lg w-100 h-100\"\r\n                    data-toggle=\"modal\"\r\n                    data-target={`#${name}`}\r\n                />\r\n            </div>\r\n            <div className=\"modal fade\" id={name} tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog modal-xl\">\r\n                    <div className=\"modal-content\">\r\n                        <img\r\n                            src={url}\r\n                            alt={name}\r\n                            className=\"rounded-lg mx-auto w-90 mt-5 pointer\"\r\n                            onClick={() => alert('like')}\r\n                        />\r\n                        <hr className=\"line\" />\r\n                        <div className=\"row\">\r\n                            {/*<div className=\"col-9\">*/}\r\n                            {/*    <Comments photoId={photo.id} />*/}\r\n                            {/*</div>*/}\r\n                            {/*<div className=\"col-3\">*/}\r\n                            <div className=\"col\">\r\n                                {/* Photo Owner */}\r\n                                <div className=\"w-100 pb-3\">\r\n                                    <span>Owner: </span>\r\n                                    <Link to={`/user/${user.id}`} className=\"text-primary info-user-name\">{`${user.firstName} ${user.lastName}`}</Link>\r\n                                    <div>{photo.likes} likes</div>\r\n                                    <button className=\"btn btn-danger\" onClick={() => like()}>Like</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Photo;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Photo from '../../components/Photo';\r\nimport { photos as datPhoto } from '../../../../data';\r\n\r\nconst PhotosContainer = ({ item }) => {\r\n    const [photos, setPhotos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // fetching data\r\n        setPhotos(datPhoto);\r\n    }, [item.id]);\r\n\r\n    return (\r\n        <div className=\"cont\">\r\n            <div className=\"row\">\r\n            {\r\n                photos.length > 0 ?\r\n                    photos.map(photo => (\r\n                        <Photo key={`p:${photo.id}u:${item.id}`} photo={photo} user={item} />\r\n                    )) :\r\n                    'There is no photo'\r\n            }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PhotosContainer;\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Search = ({ onChange, onClick, className, value, url, placeholder }) => {\r\n    return (\r\n        <div className={`input-group ${className}`}>\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder={placeholder ? placeholder : 'Search'}\r\n                onChange={(e) => onChange(e)}\r\n                value={value}\r\n            />\r\n            <div className=\"input-group-append\">\r\n                <Link\r\n                    to={url}\r\n                    className=\"btn btn-outline-primary\"\r\n                    onClick={() => onClick()}\r\n                >\r\n                    Search\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;","import React, {useState, useEffect} from 'react';\r\nimport {friends as dataFriends} from '../../../../data';\r\nimport {Link} from \"react-router-dom\";\r\nimport Search from \"../../../../components/Search\";\r\nimport {restSettings} from \"../../../../constants\";\r\nimport responseHandler from \"../../../../helpers/responseHandler\";\r\n\r\nconst FriendsContainer = ({item, curUserId}) => {\r\n    // const isCurUser = item.id === curUserId;\r\n    const [friends, setFriends] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n    const f = (value) => {\r\n        if (value && value.trim()) {\r\n            // fetching data\r\n            fetch(`${window.host}/friend/${value}`, {\r\n                ...restSettings,\r\n                method: 'GET'\r\n            }).then(res => responseHandler(res))\r\n                .then(() => true)\r\n                .catch(() => {\r\n                    alert('albums weren\\'t found')\r\n                });\r\n\r\n            setFriends(dataFriends.filter(el => el.nickname.includes(value)))\r\n        } else {\r\n            setFriends(dataFriends.filter(el => el.ownerId === item.id));\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // fetching data\r\n        setFriends(dataFriends.filter(el => el.ownerId === item.id));\r\n    }, [item.id]);\r\n\r\n    return (\r\n        <div className=\"cont\">\r\n            <div className=\"row\">\r\n                <Search\r\n                    className=\"mb-3\"\r\n                    onChange={(e) => setSearch(e.target.value)}\r\n                    onClick={() => f(search)}\r\n                    value={search}\r\n                    url={`/user/${item.id}/friends?q=${search}`}\r\n                />\r\n            </div>\r\n            <div className=\"row m-0\">\r\n                {\r\n                    friends.length > 0 ?\r\n                        friends.map(friend => (\r\n                            <div key={friend.nickname} className=\"col-12 card mt-3\">\r\n                                <div className=\"card-body\">\r\n                                    <img\r\n                                        src={friend.url}\r\n                                        alt=\"avatar\"\r\n                                        className=\"rounded-circle mr-2\"\r\n                                        width=\"60px\"\r\n                                        height=\"60px\"\r\n                                        onClick={() => alert('like')}\r\n                                    />\r\n                                    <div className=\"d-inline-block\">\r\n                                        Nickname: {friend.nickname}\r\n                                    </div>\r\n                                    <div className=\"d-inline-block ml-2\">\r\n                                        Name: <Link to={`/user/${friend.id}`}\r\n                                                    className=\"text-primary info-user-name\">{friend.firstName} {friend.lastName}</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )) :\r\n                        null\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FriendsContainer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {albums as dataAlbums} from '../../../../data';\r\nimport { Link } from \"react-router-dom\";\r\nimport Search from \"../../../../components/Search\";\r\nimport {restSettings} from \"../../../../constants\";\r\nimport responseHandler from \"../../../../helpers/responseHandler\";\r\n\r\nconst AlbumsContainer = ({ item, curUserId }) => {\r\n    const [albums, setAlbums] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n    const f = (value) => {\r\n        if (value && value.trim()) {\r\n            // fetching data\r\n            fetch(`${window.host}/album/${value}`, {\r\n                ...restSettings,\r\n                method: 'GET'\r\n            }).then(res => responseHandler(res))\r\n                .then(() => true)\r\n                .catch(() => {\r\n                    alert('albums weren\\'t found')\r\n                });\r\n\r\n            setAlbums(dataAlbums.filter(el => el.access && el.name.includes(value)))\r\n        } else {\r\n            setAlbums(dataAlbums.filter(el => el.access));\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // fetching data\r\n        setAlbums(dataAlbums.filter(el => el.access));\r\n    }, [item.id]);\r\n\r\n    return (\r\n        <div className=\"cont\">\r\n            <div className=\"row\">\r\n                <Search\r\n                    className=\"mb-3\"\r\n                    onChange={(e) => setSearch(e.target.value)}\r\n                    onClick={() => f(search)}\r\n                    value={search}\r\n                    url={`/user/${item.id}/albums?q=${search}`}\r\n                />\r\n            </div>\r\n            <div className=\"row\">\r\n                {\r\n                    albums.length > 0 ?\r\n                        albums.map(album => (\r\n                            <Link to={`/album/${album.id}`} key={album.name} className=\"col-4 mt-3\">\r\n                                <img\r\n                                    src={album.url}\r\n                                    alt={album.name}\r\n                                    className=\"pointer rounded-lg w-100 h-100\"\r\n                                />\r\n                            </Link>\r\n                        )) :\r\n                        'There is no albums'\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AlbumsContainer;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Tabs from './components/Tabs';\r\nimport PhotosContainer from './containers/Photos';\r\nimport FriendsContainer from './containers/Friends';\r\nimport AlbumsContainer from './containers/Albums';\r\nimport CommentsContainer from \"./components/Comments\";\r\n\r\nconst PageContent = ({ item, isUser = true, ...props }) => {\r\n    const path = props.location.pathname;\r\n    const activeTab = /albums/.test(path) ? 1 : (/friends/.test(path) ? 2 : 0);\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <Tabs activeTab={activeTab} itemId={item.id} isUser={isUser} />\r\n            <Switch>\r\n                {\r\n                    isUser ?\r\n                        <>\r\n                            <Route exact path=\"/user/:itemId\" render={() => <AlbumsContainer item={item} />} />\r\n                            <Route path=\"/user/:itemId/albums\" render={() => <AlbumsContainer item={item} />} />\r\n                            <Route path=\"/user/:itemId/friends\" render={() => <FriendsContainer item={item} />} />\r\n                        </> :\r\n                        <>\r\n                            <Route exact path=\"/album/:itemId\" render={props => <PhotosContainer {...props} item={item} />} />\r\n                            <Route path=\"/album/:itemId/comments\" render={props => <CommentsContainer {...props} albumId={item.id} item={item} />} />\r\n                        </>\r\n                }\r\n            </Switch>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageContent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport InformationBlock from './Information';\r\nimport PageContent from './PageContent';\r\nimport { albums, users } from './../data';\r\nimport {restSettings} from \"../constants\";\r\nimport responseHandler from \"../helpers/responseHandler\";\r\n\r\nconst Content = ({ isUser, ...props}) => {\r\n    const itemId = +props.match.params.itemId ? +props.match.params.itemId : 1;\r\n    const [curItem, setItem] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // fetching data\r\n        // while REST isn't finished\r\n        if (isUser) {\r\n            fetch(`${window.host}/api/${isUser ? 'user' : 'album'}/${itemId}`, {\r\n                ...restSettings,\r\n                method: 'GET'\r\n            }).then(result => responseHandler(result))\r\n                .then(user => setItem(user))\r\n                .catch(() => {\r\n                    setItem(null);\r\n                });\r\n        } else {\r\n            const item = (isUser ? users : albums).find(el => el.id === itemId);\r\n            setItem(item);\r\n        }\r\n    }, [itemId, isUser]);\r\n\r\n    return curItem ?\r\n        <>\r\n            <InformationBlock {...props} isUser={isUser} item={curItem} />\r\n            <PageContent {...props} isUser={isUser} item={curItem} />\r\n        </> :\r\n        'Wrong request';\r\n};\r\n\r\nexport default Content;\r\n","import React, {Component} from 'react';\r\nimport './index.scss';\r\nimport {Link} from \"react-router-dom\";\r\nimport {restSettings} from \"../constants\";\r\nimport responseHandler from \"../helpers/responseHandler\";\r\n\r\nclass Index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            login: '',\r\n            isLoginValid: true,\r\n            isLogFromServer: true,\r\n            loginErrorMessage: 'Login required, length => 6, letters and digits only',\r\n            loginServerMessage: 'Login or email does not exist',\r\n            password: '',\r\n            isPasswordValid: true,\r\n            passwordMessage: 'Password required, length 6 <= x <= 20'\r\n        };\r\n    }\r\n\r\n    validatePassword = (value) => {\r\n        if (!value || !value.trim()) {\r\n            return false;\r\n        }\r\n\r\n        const val = value.trim();\r\n\r\n        return val.length >= 6 && val.length <= 20;\r\n    };\r\n\r\n    onPasswordChange = (value) => {\r\n        this.setState({\r\n            password: value.trim(),\r\n            isPasswordValid: this.validatePassword(value)\r\n        });\r\n    };\r\n\r\n    validateLogin = (value) => {\r\n        if (!value || !value.trim()) {\r\n            return false;\r\n        }\r\n\r\n        const val = value.trim();\r\n\r\n        if (val.length < 6) {\r\n            return false;\r\n        }\r\n\r\n        return /^[\\-а-яА-Яa-zA-Z0-9@.]+$/i.test(val);\r\n    };\r\n\r\n    onLoginChange = (value) => {\r\n        this.setState({\r\n            login: value.trim(),\r\n            isLoginValid: this.validateLogin(value),\r\n            isLogFromServer: true\r\n        });\r\n    };\r\n\r\n    onSignin = (e) => {\r\n        e.preventDefault();\r\n        const { login, password } = this.state;\r\n        const isLoginValid = this.validateLogin(login);\r\n        const isPasswordValid = this.validatePassword(password);\r\n\r\n        if (!isPasswordValid || !isLoginValid) {\r\n            this.setState({\r\n                isLoginValid,\r\n                isPasswordValid\r\n            });\r\n            return;\r\n        }\r\n\r\n        fetch(`${window.host}/loginAlreadyExists`, {\r\n            ...restSettings,\r\n            body: JSON.stringify({\r\n                login\r\n            })\r\n        }).then(res => responseHandler(res))\r\n            .then((resp) => {\r\n                if (resp) {\r\n                    // autorization request from messanger\r\n                } else {\r\n                    this.setState({ isLogFromServer: false });\r\n                }\r\n            })\r\n            .catch(() => {\r\n                this.setState({ isLogFromServer: false });\r\n                alert('Not implemented')\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            login,\r\n            isLoginValid,\r\n            isLogFromServer,\r\n            loginErrorMessage,\r\n            loginServerMessage,\r\n            password,\r\n            isPasswordValid,\r\n            passwordMessage\r\n        } = this.state;\r\n\r\n        return (\r\n            <main className=\"bg-img\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"tableEmitator\">\r\n                            <div className=\"cellEmitator\">\r\n                                <div className=\"centeredBlock\">\r\n                                    <div className=\"col-xs-12 col-sm-3 col-sm-offset-2\">\r\n                                        <h1>Photo album</h1>\r\n                                        <ul>\r\n                                            <li><Link to='/user/1'>user</Link></li>\r\n                                            <li><Link to='/album/1'>album</Link></li>\r\n                                            <li><Link to='/'>home</Link></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div className=\"col-xs-12 col-sm-5 col-sm-offset-2\">\r\n                                        <div className=\"tab\">\r\n                                            <form className=\"form-horizontal\" id=\"form\" action=\"/enter\" method=\"post\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"login\">E-mail or Login</label>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        className={`form-control ${!isLoginValid || !isLogFromServer ? 'invalid' : ''}`}\r\n                                                        id=\"login\"\r\n                                                        maxLength=\"35\"\r\n                                                        name=\"login\"\r\n                                                        value={login}\r\n                                                        onChange={(event) => this.onLoginChange(event.target.value)}\r\n                                                    />\r\n                                                    <label id=\"login-error\" className=\"invalid\" htmlFor=\"login\">\r\n                                                        { isLogFromServer ? !isLoginValid ? loginErrorMessage : '' : loginServerMessage }\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"password\">Password</label>\r\n                                                    <input\r\n                                                        type=\"password\"\r\n                                                        className={`form-control ${isPasswordValid ? '' : 'invalid'}`}\r\n                                                        id=\"password\"\r\n                                                        maxLength=\"20\"\r\n                                                        name=\"password\"\r\n                                                        value={password}\r\n                                                        onChange={(event) => this.onPasswordChange(event.target.value)}\r\n                                                    />\r\n                                                    <input type=\"hidden\" id=\"token\" name=\"token\"/>\r\n                                                    <label id=\"password-error\" className=\"invalid\" htmlFor=\"password\">\r\n                                                        { !isPasswordValid ? passwordMessage : '' }\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <button\r\n                                                        type=\"submit\"\r\n                                                        className=\"btn btn-default send\"\r\n                                                        value=\"\"\r\n                                                        onClick={(e) => this.onSignin(e)}\r\n                                                    >Sign In</button>\r\n                                                    <a href=\"\\signup\" className=\"btn btn-default\">Sign up</a>\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Index;\r\n","import React from 'react';\r\nimport './index.scss';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Signup = (props) => {\r\n    return (\r\n        <main className=\"bg-img\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"tableEmitator\">\r\n                        <div className=\"cellEmitator\">\r\n                            <div className=\"centeredBlock\">\r\n                                <div className=\"col-xs-10\">\r\n                                    <div className=\"tab\">\r\n                                        <form className=\"form-horizontal\" id=\"form\" action=\"/enter\" method=\"post\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"firstName\">Last Name</label>\r\n                                                <input type=\"text\" className=\"form-control\" id=\"firstName\" maxLength=\"35\"\r\n                                                    name=\"firstName\" />\r\n                                                <label id=\"login-error\" className=\"invalid\" htmlFor=\"firstName\" />\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"lastName\">Last Name</label>\r\n                                                <input type=\"text\" className=\"form-control\" id=\"lastName\" maxLength=\"35\"\r\n                                                    name=\"lastName\" />\r\n                                                <label id=\"login-error\" className=\"invalid\" htmlFor=\"lastName\" />\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"nickname\">Nickname</label>\r\n                                                <input type=\"text\" className=\"form-control\" id=\"nickname\" maxLength=\"35\"\r\n                                                    name=\"nickname\" />\r\n                                                <label id=\"login-error\" className=\"invalid\" htmlFor=\"nickname\" />\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"birthDate\">Birth Date</label>\r\n                                                <input type=\"date\" className=\"form-control\" id=\"birthDate\" maxLength=\"35\"\r\n                                                    name=\"birthDate\" />\r\n                                                <label id=\"login-error\" className=\"invalid\" htmlFor=\"birthDate\" />\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"email\">Email</label>\r\n                                                <input type=\"email\" className=\"form-control\" id=\"email\" maxLength=\"35\"\r\n                                                    name=\"email\" />\r\n                                                <label id=\"login-error\" className=\"invalid\" htmlFor=\"email\" />\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"password\">Password</label>\r\n                                                <input type=\"password\" className=\"form-control\" id=\"password\"\r\n                                                    maxLength=\"20\" name=\"password\" />\r\n                                                <input type=\"hidden\" id=\"token\" name=\"token\" />\r\n                                                <label id=\"password-error\" className=\"invalid\"\r\n                                                    htmlFor=\"password\" />\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <input type=\"submit\" className=\"btn btn-default\" href=\"/signin\" value=\"Sign in\"/>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Signup;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Content from '../UserAlbumPage';\r\nimport Index from './../Index/index';\r\nimport Signup from './../Signup/index'\r\n\r\nconst curUserId = 1;\r\n\r\nconst MainApp = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <Route path=\"/\" exact component={Index} />\r\n            <Route path=\"/signup\" exact component={Signup} />\r\n            <Route path='/user/:itemId' render={props => <Content {...props} curUserId={curUserId} isUser={true} />} />\r\n            <Route path='/album/:itemId' render={props => <Content {...props} curUserId={curUserId} isUser={false} />} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainApp;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"UserAlbumPage is cached for offline use.\" message.\r\n              console.log('UserAlbumPage is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport MainApp from './StartPoint';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nwindow.host = 'http://localhost:8080';\r\nReactDOM.render(<BrowserRouter><MainApp /></BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}